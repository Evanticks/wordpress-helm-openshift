kind: Deployment
apiVersion: apps/v1
metadata:
  name: el-event-listener-zmcdp9
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: EventListener
      app.kubernetes.io/part-of: Triggers
      eventlistener: event-listener-zmcdp9
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/managed-by: EventListener
        app.kubernetes.io/part-of: Triggers
        eventlistener: event-listener-zmcdp9
    spec:
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /live
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          terminationMessagePath: /dev/termination-log
          name: event-listener
          livenessProbe:
            httpGet:
              path: /live
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          env:
            - name: K_LOGGING_CONFIG
              value: >-
                {"zap-logger-config":"{\n  \"level\": \"info\",\n 
                \"development\": false,\n  \"sampling\": {\n    \"initial\":
                100,\n    \"thereafter\": 100\n  },\n  \"outputPaths\":
                [\"stdout\"],\n  \"errorOutputPaths\": [\"stderr\"],\n 
                \"encoding\": \"json\",\n  \"encoderConfig\": {\n   
                \"timeKey\": \"ts\",\n    \"levelKey\": \"level\",\n   
                \"nameKey\": \"logger\",\n    \"callerKey\": \"caller\",\n   
                \"messageKey\": \"msg\",\n    \"stacktraceKey\":
                \"stacktrace\",\n    \"lineEnding\": \"\",\n   
                \"levelEncoder\": \"\",\n    \"timeEncoder\": \"iso8601\",\n   
                \"durationEncoder\": \"\",\n    \"callerEncoder\": \"\"\n 
                }\n}\n"}
            - name: K_METRICS_CONFIG
              value: >-
                {"Domain":"tekton.dev/triggers","Component":"eventlistener","PrometheusPort":0,"PrometheusHost":"","ConfigMap":{}}
            - name: K_TRACING_CONFIG
              value: '{"backend":"","debug":"false","sample-rate":"0"}'
            - name: NAMESPACE
              value: pipeline-helm
            - name: NAME
              value: event-listener-zmcdp9
            - name: EL_EVENT
              value: enable
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: METRICS_PROMETHEUS_PORT
              value: '9000'
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 9000
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
          image: >-
            registry.redhat.io/openshift-pipelines/pipelines-triggers-eventlistenersink-rhel8@sha256:09c03cf3b5b9fb398ef959e6c4d7ab185df732407f54bd44b8269916cf8f2295
          args:
            - '--el-name=event-listener-zmcdp9'
            - '--el-namespace=pipeline-helm'
            - '--port=8080'
            - '--readtimeout=5'
            - '--writetimeout=40'
            - '--idletimeout=120'
            - '--timeouthandler=30'
            - '--httpclient-readtimeout=30'
            - '--httpclient-keep-alive=30'
            - '--httpclient-tlshandshaketimeout=10'
            - '--httpclient-responseheadertimeout=10'
            - '--httpclient-expectcontinuetimeout=1'
            - '--is-multi-ns=false'
            - '--payload-validation=true'
            - '--cloudevent-uri='
            - '--tls-cert='
            - '--tls-key='
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: pipeline
      serviceAccount: pipeline
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600